module TIMEOUT:
    input INT(integer), BPM(integer), RESET;
    relation RESET => BPM;
	function BPM_TO_FREQ(integer) : integer;
    output TIME_OUT;
    var lastBPM : integer in
        await immediate BPM;
        lastBPM := BPM_TO_FREQ(?BPM);
        loop
            var passed := 0 : integer in
                abort
                trap TOUT in
                    every INT do
                        passed := passed + ?INT;
                        if passed > lastBPM
                            then emit TIME_OUT; exit TOUT 
                        end
                    end
                end trap;
                when immediate RESET do
                    lastBPM := BPM_TO_FREQ(?BPM);
                end abort;
            end var;
            pause
        end loop
    end var
end module
